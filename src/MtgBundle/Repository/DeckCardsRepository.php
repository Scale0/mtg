<?php

namespace MtgBundle\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use MtgBundle\Entity\Card;
use MtgBundle\Entity\CardFace;
use MtgBundle\Entity\Deck;
use MtgBundle\Entity\DeckCards;

/**
 * DeckCardsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeckCardsRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $deck
     *
     * @return DeckCards[]
     */
    public function getCardsOrderedByType($deck)
    {
        $builder = $this->getEntityManager()->createQueryBuilder();
        $query = $builder
            ->select('DC')
            ->from('MtgBundle:DeckCards','DC')
            ->join(Card::class,'card','with','DC.card = card')
            ->join(CardFace::class, 'CardFace', 'with', 'CardFace.card = card')
            ->where('DC.deck = :deck')
            ->orderBy('CardFace.type', 'DESC')
            ->setParameter('deck', $deck)
            ->getQuery();

        return $query->execute();

    }

    /**
     * @param Deck $deck
     *
     * @return DeckCards[]
     */
    public function getCardsWithMoreThenZeroCmC(Deck $deck)
    {
        $builder = $this->getEntityManager()->createQueryBuilder();
        $query = $builder
            ->select('DC')
            ->from('MtgBundle:DeckCards', 'DC')
            ->join(Card::class,'card','with', 'DC.card = card')
            ->join(CardFace::class, 'CardFace', 'with', 'CardFace.card = card')
            ->Where('CardFace.type in (:types)')
            ->andWhere('DC.deck = :deck')
            ->setParameter(':deck', $deck)
            ->setParameter('types', [1,2,32,64,256,512])
            ->getQuery();

        return $query->execute();
    }
}
